{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyPy8Q++u0WA1cc/A2R5ZwbS",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/PosgradoMNA/Proyecto_Integrador_EQ_2/blob/main/Equipo_2_DEA\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "xwrEs3oDIE9N"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "\n",
        "# 1. Cargar los datos\n",
        "datos = pd.read_csv('campania_marketing_dataset.csv')\n",
        "\n",
        "# 2. Análisis inicial de los datos\n",
        "print(\"Primeras filas del dataset:\")\n",
        "print(datos.head())\n",
        "\n",
        "print(\"\\nInformación del dataset:\")\n",
        "print(datos.info())\n",
        "\n",
        "print(\"\\nEstadísticas descriptivas:\")\n",
        "print(datos.describe())\n",
        "\n",
        "# 3. Análisis univariante\n",
        "# Para variables numéricas\n",
        "def analisis_numerico(datos):\n",
        "    numericas = datos.select_dtypes(include=[np.number]).columns\n",
        "    for columna in numericas:\n",
        "        plt.figure(figsize=(10, 6))\n",
        "        # Histograma\n",
        "        plt.subplot(1, 2, 1)\n",
        "        sns.histplot(datos[columna], kde=True)\n",
        "        plt.title(f'Histograma de {columna}')\n",
        "\n",
        "        # Box plot\n",
        "        plt.subplot(1, 2, 2)\n",
        "        sns.boxplot(y=datos[columna])\n",
        "        plt.title(f'Box Plot de {columna}')\n",
        "        plt.tight_layout()\n",
        "        plt.show()\n",
        "\n",
        "# Para variables categóricas\n",
        "def analisis_categorico(datos):\n",
        "    categoricas = datos.select_dtypes(include=['object']).columns\n",
        "    for columna in categoricas:\n",
        "        plt.figure(figsize=(10, 6))\n",
        "        # Gráfico de barras\n",
        "        sns.countplot(data=datos, x=columna)\n",
        "        plt.title(f'Distribución de {columna}')\n",
        "        plt.xticks(rotation=45)\n",
        "        plt.tight_layout()\n",
        "        plt.show()\n",
        "\n",
        "# 4. Análisis bivariante\n",
        "def analisis_bivariante(datos):\n",
        "    # Matriz de correlación para variables numéricas\n",
        "    numericas = datos.select_dtypes(include=[np.number])\n",
        "    plt.figure(figsize=(10, 8))\n",
        "    sns.heatmap(numericas.corr(), annot=True, cmap='coolwarm')\n",
        "    plt.title('Matriz de Correlación')\n",
        "    plt.tight_layout()\n",
        "    plt.show()\n",
        "\n",
        "    # Para variables categóricas vs numéricas\n",
        "    numericas = datos.select_dtypes(include=[np.number]).columns\n",
        "    categoricas = datos.select_dtypes(include=['object']).columns\n",
        "\n",
        "    for num in numericas:\n",
        "        for cat in categoricas:\n",
        "            plt.figure(figsize=(10, 6))\n",
        "            sns.boxplot(data=datos, x=cat, y=num)\n",
        "            plt.title(f'{cat} vs {num}')\n",
        "            plt.xticks(rotation=45)\n",
        "            plt.tight_layout()\n",
        "            plt.show()\n",
        "\n",
        "# 5. Análisis específico para el dataset de marketing\n",
        "# Ejemplo: analizar la relación entre el tipo de campaña y el ROI\n",
        "def analisis_marketing(datos):\n",
        "    plt.figure(figsize=(10, 6))\n",
        "    sns.boxplot(data=datos, x='Campaign_Type', y='ROI')\n",
        "    plt.title('ROI por Tipo de Campaña')\n",
        "    plt.xticks(rotation=45)\n",
        "    plt.tight_layout()\n",
        "    plt.show()\n",
        "\n",
        "    # Ejemplo: analizar la distribución de la tasa de conversión por ubicación\n",
        "    plt.figure(figsize=(10, 6))\n",
        "    sns.barplot(data=datos, x='Location', y='Conversion_Rate')\n",
        "    plt.title('Tasa de Conversión por Ubicación')\n",
        "    plt.xticks(rotation=45)\n",
        "    plt.tight_layout()\n",
        "    plt.show()\n",
        "\n",
        "# 6. Ejecutar los análisis\n",
        "print(\"\\nIniciando análisis univariante...\")\n",
        "analisis_numerico(datos)\n",
        "analisis_categorico(datos)\n",
        "\n",
        "print(\"\\nIniciando análisis bivariante...\")\n",
        "analisis_bivariante(datos)\n",
        "\n",
        "print(\"\\nIniciando análisis específico para el dataset de marketing...\")\n",
        "analisis_marketing(datos)\n",
        "\n",
        "# 7. Verificar valores faltantes\n",
        "print(\"\\nValores faltantes por columna:\")\n",
        "print(datos.isnull().sum())\n",
        "\n",
        "# 8. Guardar un resumen en un archivo\n",
        "with open('resumen_eda.txt', 'w') as f:\n",
        "    f.write(\"Resumen del Análisis Exploratorio de Datos\\n\")\n",
        "    f.write(\"=========================================\\n\\n\")\n",
        "    f.write(\"Información del Dataset:\\n\")\n",
        "    datos.info(buf=f)\n",
        "    f.write(\"\\n\\nEstadísticas Descriptivas:\\n\")\n",
        "    f.write(datos.describe().to_string())\n",
        "    f.write(\"\\n\\nValores Faltantes:\\n\")\n",
        "    f.write(datos.isnull().sum().to_string())"
      ]
    }
  ]
}